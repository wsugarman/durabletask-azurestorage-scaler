apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "durabletask-azurestorage-scaler.fullname" . }}
    name: {{ template "durabletask-azurestorage-scaler.fullname" . }}
    app.kubernetes.io/component: external-scaler
    app.kubernetes.io/name: {{ template "durabletask-azurestorage-scaler.fullname" . }}
    {{- include "durabletask-azurestorage-scaler.labels" . | indent 4 }}
  {{- if .Values.additionalAnnotations }}
  annotations:
    {{- toYaml .Values.additionalAnnotations | nindent 4 }}
  {{- end }}
  name: {{ template "durabletask-azurestorage-scaler.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.upgradeStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "durabletask-azurestorage-scaler.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "durabletask-azurestorage-scaler.fullname" . }}
        name: {{ template "durabletask-azurestorage-scaler.fullname" . }}
        app.kubernetes.io/component: external-scaler
        app.kubernetes.io/name: {{ template "durabletask-azurestorage-scaler.fullname" . }}
        {{- include "durabletask-azurestorage-scaler.labels" . | indent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
        {{- if .Values.podIdentity.enabled }}
        azure.workload.identity/use: "true"
        {{- end }}
      {{- if or .Values.podAnnotations .Values.additionalAnnotations }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.additionalAnnotations }}
        {{- toYaml .Values.additionalAnnotations | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "durabletask-azurestorage-scaler.serviceAccountName" . }}
      automountServiceAccountToken: true
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if and .Values.tls.serverCert.secret .Values.tls.serverCert.keys.cert }}
            - name: ASPNETCORE_URLS
              value: https://+:8080;http://+:8081
            {{- if and .Values.tls.caCert.secret .Values.tls.caCert.key }}
            - name: Kestrel__Client__Certificate__Validation__CertificateAuthority__Path
              value: "/cacerts/{{ .Values.tls.caCert.key }}"
            {{- end }}
            - name: Kestrel__Client__Certificate__Validation__Enabled
              value: {{ not .Values.tls.unsafe | quote }}
            {{- if .Values.tls.serverCert.keys.key }}
            - name: Kestrel__Certificates__Default__KeyPath
              value: "/certs/{{ .Values.tls.serverCert.keys.key }}"
            {{- end }}
            - name: Kestrel__Certificates__Default__Path
              value: "/certs/{{ .Values.tls.serverCert.keys.cert }}"
            - name: Kestrel__EndpointDefaults__ClientCertificateMode
              value: RequireCertificate
            {{- end }}
            - name: Logging__Console__FormatterName
              value: {{ .Values.logging.format }}
            - name: Logging__Console__FormatterOptions__TimestampFormat
              value: {{ .Values.logging.timestampFormat }}
            - name: Logging__LogLevel__Default
              value: {{ .Values.logging.level | quote }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 -}}
            {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 -}}
          {{- end }}
          {{- if or .Values.tls.caCert.secret .Values.tls.serverCert.secret }}
          volumeMounts:
            {{- if .Values.tls.caCert.secret }}
            - name: cacerts
              mountPath: /cacerts
              readOnly: true
            {{- end }}
            {{- if .Values.tls.serverCert.secret }}
            - name: certs
              mountPath: /certs
              readOnly: true
            {{- end }}
          {{- end }}
          ports:
            - name: grpc
              containerPort: 8080
              protocol: TCP
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if or .Values.tls.caCert.secret .Values.tls.serverCert.secret }}
      volumes:
        {{- if .Values.tls.caCert.secret }}
        - name: cacerts
          secret:
            secretName: {{ .Values.tls.caCert.secret }}
            optional: false
        {{- end }}
        {{- if .Values.tls.serverCert.secret }}
        - name: certs
          secret:
            secretName: {{ .Values.tls.serverCert.secret }}
            optional: false
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints.operator }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
