name: Scaler

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read Versions
        id: chart
        uses: ./.github/actions/parse-chart
        with:
          workflowRunId: ${{ github.run_id }}

      - name: Run Unit Tests
        uses: ./.github/actions/dotnet-test
        with:
          assemblyVersion: ${{ steps.chart.outputs.assemblyVersion }}
          buildConfiguration: Release
          fileVersion: ${{ steps.chart.outputs.assemblyFileVersion }}
          resultsDirectory: ${{ runner.temp }}/TestResults

      - name: Upload Code Coverage
        uses: ./.github/actions/code-coverage
        with:
          reportPath: ${{ runner.temp }}/TestResults/*/coverage.cobertura.xml

      - name: Build Docker Image
        uses: ./.github/actions/docker-build
        with:
          assemblyVersion: ${{ steps.chart.outputs.assemblyVersion }}
          buildConfiguration: Release
          fileVersion: ${{ steps.chart.outputs.assemblyFileVersion }}
          imageRepository: ghcr.io/${{ github.repository }}
          imageTag: ${{ steps.chart.outputs.imageTag }}

      - name: Validate Helm Chart
        uses: ./.github/actions/helm-test
        with:
          buildConfiguration: Release
          imageTag: ${{ steps.chart.outputs.imageTag }}
          scalerImageRepository: ghcr.io/${{ github.repository }}

  publishImage:
    name: Publish Image
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: read
      packages: write

    steps:
      - name: Download Image
        uses: actions/download-artifact@v3
        with:
          name: image
          path: ${{ runner.temp }}/image

      - name: Push Docker Image
        id: push
        uses: ./.github/actions/docker-push
        with:
          imageArchive: ${{ runner.temp }}/image/durabletask-azurestorage-scaler.tar
          imageRepository: ghcr.io/${{ github.repository }}
          imageTag: ${{ steps.chart.outputs.imageTag }}

      - name: Create Image Release
        uses: ./.github/actions/github-release
        if: ${{ steps.push.outputs.success }}
        with:
          asset: ${{ runner.temp }}/image/durabletask-azurestorage-scaler.tar
          name: 'Durable Task KEDA External Scaler Image'
          prerelease: ${{ steps.chart.outputs.imagePrerelease }}
          tag: 'Image_${{ steps.chart.outputs.imageTag }}'
          version: ${{ steps.chart.outputs.imageTag }}
