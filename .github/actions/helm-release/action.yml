name: helm release
description: Releases the helm chart if the version has changed
inputs:
  artifactHubPath:
    description: The path to the ArtifactHub metadata
    required: true
  chartName:
    description: The name of the Helm chart
    required: true
  chartPath:
    description: The path to the Helm chart
    required: true
  chartVersion:
    description: The version of the Helm chart
    required: true
  gitHubToken:
    description: The GitHub access token from the secret context
    required: true
  gpgPassword:
    description: The password for the GPG key
    required: true
  gpgPrivateKey:
    description: The Base64 GPG private signing key
    required: true
  helmChartRepositoryPath:
    description: The path to the chart repository
    required: true
outputs:
  chart:
    description: Indicates whether the image was successfully pushed
    value: ${{ steps.exists.outputs.result != 'true' }}

runs:
  using: composite
  steps:
    - name: Install Helm
      uses: azure/setup-helm@v3

    - name: Check Helm Chart Repository
      id: repository
      shell: bash
      run: |
        expected="${{ inputs.helmChartRepositoryPath }}/${{ inputs.chartName }}-${{ inputs.chartVersion }}.tgz"
        if [ -f $expected ]; then
          echo "Chart version '${{ inputs.chartVersion }}' already exists."
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "Chart version '${{ inputs.chartVersion }}' does not yet exist."
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Private Keyring
      shell: bash
      run: echo '${{ inputs.gpgPrivateKey }}' | base64 --decode >> private-key.gpg
      if: ${{ steps.repository.outputs.exists != 'true' }}

    - name: Helm Pack
      id: package
      shell: bash
      if: ${{ steps.repository.outputs.exists != 'true' }}
      run: |
        echo '${{ inputs.gpgPassword }}' |  | helm package ${{ input.chartPath }} --sign --key 'Will Sugarman' --keyring private-key.gpg --passphrase-file -
        echo "chart=${{ inputs.chartName }}-${{ inputs.chartVersion }}.tgz" >> $GITHUB_OUTPUT
        echo "provenance=${{ inputs.chartName }}-${{ inputs.chartVersion }}.tgz.prov" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.helmChartRepositoryPath }}

    - name: Delete Keyring
      shell: bash
      if: ${{ (steps.repository.outputs.exists != 'true') && always() }}
      run: rm private-key.gpg

    - name: Configure Git
      shell: bash
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
