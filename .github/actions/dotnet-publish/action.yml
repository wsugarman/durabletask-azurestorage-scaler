name: dotnet publish
description: Builds the scaler and ensures its quality by running both cross-platform tests and code coverage.
inputs:
  assemblyVersion:
    description: The scaler assembly's version.
    required: true
  buildConfiguration:
    default: Debug
    description: The dotnet build configuration.
    required: false
  coverageFileName:
    default: coverage.cobertura.xml
    description: The name of the code coverage file.
    required: false
  fileVersion:
    description: The scaler assembly's file version.
    required: true
  imageRepository:
    default: durabletask-azurestorage-scaler
    description: The repository used for the scaler image.
    required: false
  imageTag:
    description: The tag to use for the images.
    required: true
  testResultsDirectory:
    description: The directory where the test results will be placed.
    required: true

runs:
  using: composite
  steps:
    - name: Setup
      uses: actions/setup-dotnet@v4

    - name: Build
      shell: bash
      run: |
        dotnet build "./src/Scaler.sln" \
          --configuration "${{ inputs.buildConfiguration }}" \
          "--property:ContinuousIntegrationBuild=true;AssemblyVersion=${{ inputs.assemblyVersion }};FileVersion=${{ inputs.fileVersion }};InformationalVersion=${{ inputs.fileVersion }}" \
          --runtime linux-x64 \
          -warnaserror

    - name: Test
      shell: bash
      run: |
        dotnet run \
          --configuration "${{ inputs.buildConfiguration }}" \
          --coverage \
          --coverage-output "${{ inputs.coverageFileName }}" \
          --coverage-output-format cobertura \
          --coverage-settings "$GITHUB_WORKSPACE/src/CodeCoverage.runsettings" \
          --no-build \
          --project "./src/Keda.Scaler.DurableTask.AzureStorage.Test/Keda.Scaler.DurableTask.AzureStorage.Test.csproj" \
          --results-directory "${{ inputs.testResultsDirectory }}" \
          --runtime linux-x64 \
          --verbosity normal

    - name: Publish
      shell: bash
      run: |
        dotnet publish "./src/Keda.Scaler.DurableTask.AzureStorage/Keda.Scaler.DurableTask.AzureStorage.csproj" \
          --configuration "${{ inputs.buildConfiguration }}" \
          --no-build \
          --output "${{ runner.temp }}/app" \
          --runtime linux-x64

    - name: Upload Binaries
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: ${{ runner.temp }}/app
