name: chart sync
description: Synchronizes the packed Helm chart with the chart repository
inputs:
  artifactHubDirectoryName:
    default: artifacthub
    description: The directory in the chart repository that contains the Artifact Hub metadata
    required: false
  assetPath:
    description: The path to the already packaged Helm chart
    required: true
  chartName:
    default: durabletask-azurestorage-scaler
    description: The name of the Helm chart
    required: false
  chartRepository:
    default: wsugarman/charts
    description: The name of the GitHub repository for Helm charts
    required: false
  chartRepositoryDirectoryName:
    description: The directory under $GITHUB_WORKSPACE into which the chart repository should be cloned
    required: true
  chartRepositoryToken:
    description: The GitHub PAT token for reading and writing to the chart repository
    required: true
  chartVersion:
    description: The version of the Helm chart
    required: true
  logoPath:
    description: The path for the chart logo
    required: true
  readmePath:
    description: The path for the chart README
    required: true
outputs:
  success:
    description: Indicates whether the synchronization was successful
    value: ${{ steps.exists.outputs.result != 'true' }}

runs:
  using: composite
  steps:
    - name: Checkout Charts
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.chartRepository }}
        token: ${{ inputs.chartRepositoryToken }}
        path: ${{ inputs.chartRepositoryDirectoryName }}

    - name: Check Chart Exists
      id: exists
      shell: bash
      run: |
        expected="${{ inputs.chartName }}-${{ inputs.chartVersion }}.tgz"
        if [ -f $expected ]; then
          echo "Chart version '${{ inputs.chartVersion }}' already exists."
          echo "result=true" >> $GITHUB_OUTPUT
        else
          echo "Chart version '${{ inputs.chartVersion }}' does not yet exist."
          echo "result=false" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}

    - name: Create Release Branch
      shell: bash
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git checkout -b releases/${{ inputs.chartName }}/${{ inputs.chartVersion }}
      working-directory: ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}

    - name: Copy Chart
      shell: bash
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: cp -r ${{ inputs.assetPath }} ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}

    - name: Regenerate Index
      shell: bash
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: |
        rm index.yaml
        helm repo index .
      working-directory: ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}

    - name: Copy Artifact Hub Repository Assets
      shell: bash
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: |
        mkdir -p ./${{ inputs.chartName }}/${{ inputs.chartVersion }}
        cp  ${{ inputs.readmePath }} ./${{ inputs.chartName }}/${{ inputs.chartVersion }}/README.md
        cp  ${{ inputs.logoPath }} ./${{ inputs.chartName }}/${{ inputs.chartVersion }}/logo.png
      working-directory: ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}/${{ inputs.artifactHubDirectoryName }}

    - name: Generate artifacthub-pkg.yml
      shell: pwsh
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: ./.github/actions/chart-sync/scripts/CreateArtifactHubPkg.ps1 `
        -ChartVersion '${{ inputs.chartVersion }}' `
        -Destination '${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}/${{ inputs.artifactHubDirectoryName }}/${{ inputs.chartName }}/${{ inputs.chartVersion }}' `
        -IndexPath '${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}/index.yaml' `
        -LogoPath 'logo.png'

    - name: Push Changes
      shell: bash
      if: ${{ steps.exists.outputs.result != 'true' }}
      run: |
        git add -A
        git commit -m "Synchronize ${{ inputs.chartName }} ${{ inputs.chartVersion }}"
        git push -u origin releases/${{ inputs.chartName }}/${{ inputs.chartVersion }}
      working-directory: ${{ github.workspace }}/${{ inputs.chartRepositoryDirectoryName }}

    - name: Create Pull Request
      uses: actions/github-script@v6
      if: ${{ steps.exists.outputs.result != 'true' }}
      with:
        github-token: ${{ inputs.chartRepositoryToken }}
        script: |
          const complete = '${{ inputs.chartRepository }}';
          const parts = complete.split('/');
          await github.rest.pulls.create({
            owner: parts[0],
            repo: parts[1],
            title: 'Release ${{ inputs.chartName }} ${{ inputs.chartVersion }}',
            head: 'releases/${{ inputs.chartName }}/${{ inputs.chartVersion }}',
            base: 'main',
            body: 'Add release artifacts for ${{ inputs.chartName }} version ${{ inputs.chartVersion }}'
          });
