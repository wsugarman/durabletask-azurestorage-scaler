<Project Sdk="Microsoft.NET.Sdk.Web">

  <!-- TODO: Use Native AOT when all dependencies support it -->
  <PropertyGroup>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>$(RootDirectory)</DockerfileContext>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <JsonSerializerIsReflectionEnabledByDefault>false</JsonSerializerIsReflectionEnabledByDefault>
  </PropertyGroup>

  <ItemGroup>
    <Protobuf Include="Protos\externalscaler.proto" GrpcServices="Server" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Azure.Storage.Blobs" />
    <PackageReference Include="Azure.Storage.Queues" />
    <PackageReference Include="Google.Protobuf" />
    <PackageReference Include="Grpc.AspNetCore.HealthChecks" />
    <PackageReference Include="Grpc.AspNetCore.Server" />
    <PackageReference Include="Grpc.Core.Api" />
    <PackageReference Include="Grpc.Tools" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Debug'">
    <PackageReference Include="Grpc.AspNetCore.Server.Reflection" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="SR.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SR.resx</DependentUpon>
    </Compile>
    <None Include="SR.Formats.cs">
      <DependentUpon>SR.resx</DependentUpon>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="SR.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>SR.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
