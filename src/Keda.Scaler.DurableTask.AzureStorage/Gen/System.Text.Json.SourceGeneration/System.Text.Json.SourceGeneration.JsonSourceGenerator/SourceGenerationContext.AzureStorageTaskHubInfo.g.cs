// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Keda.Scaler.DurableTask.AzureStorage.Json
{
    internal partial class SourceGenerationContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo>? _AzureStorageTaskHubInfo;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo> AzureStorageTaskHubInfo
        #nullable enable annotations
        {
            get => _AzureStorageTaskHubInfo ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo>)Options.GetTypeInfo(typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo> Create_AzureStorageTaskHubInfo(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = static args => new global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo(){ CreatedAt = (global::System.DateTimeOffset)args[0], PartitionCount = (int)args[1], TaskHubName = (string)args[2] },
                    PropertyMetadataInitializer = _ => AzureStorageTaskHubInfoPropInit(options),
                    ConstructorParameterMetadataInitializer = AzureStorageTaskHubInfoCtorParamInit,
                    ConstructorAttributeProviderFactory = static () => typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = AzureStorageTaskHubInfoSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] AzureStorageTaskHubInfoPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[3];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTimeOffset>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo),
                Converter = null,
                Getter = static obj => ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)obj).CreatedAt,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "CreatedAt",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo).GetProperty("CreatedAt", InstanceMemberBindingFlags, null, typeof(global::System.DateTimeOffset), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTimeOffset>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo),
                Converter = null,
                Getter = static obj => ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)obj).PartitionCount,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PartitionCount",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo).GetProperty("PartitionCount", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo),
                Converter = null,
                Getter = static obj => ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)obj).TaskHubName,
                Setter = static (obj, value) => throw new global::System.InvalidOperationException("Setting init-only properties is not supported in source generation mode."),
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "TaskHubName",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo).GetProperty("TaskHubName", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);
            properties[2].IsGetNullable = false;
            properties[2].IsSetNullable = false;

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void AzureStorageTaskHubInfoSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo? value)
        {
            if (value is null)
            {
                writer.WriteNullValue();
                return;
            }
            
            writer.WriteStartObject();

            writer.WriteString(PropName_createdAt, ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)value).CreatedAt);
            writer.WriteNumber(PropName_partitionCount, ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)value).PartitionCount);
            writer.WriteString(PropName_taskHubName, ((global::Keda.Scaler.DurableTask.AzureStorage.TaskHubs.BlobPartitionManager.AzureStorageTaskHubInfo)value).TaskHubName);

            writer.WriteEndObject();
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] AzureStorageTaskHubInfoCtorParamInit() => new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]
        {
            new()
            {
                Name = "CreatedAt",
                ParameterType = typeof(global::System.DateTimeOffset),
                Position = 0,
                IsNullable = false,
                IsMemberInitializer = true,
            },

            new()
            {
                Name = "PartitionCount",
                ParameterType = typeof(int),
                Position = 1,
                IsNullable = false,
                IsMemberInitializer = true,
            },

            new()
            {
                Name = "TaskHubName",
                ParameterType = typeof(string),
                Position = 2,
                IsNullable = false,
                IsMemberInitializer = true,
            },
        };
    }
}
